version: 1.0.{build}
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      PROJECT_DIR: msvc12
      CMAKE_GENERATOR_NAME: Visual Studio 12 2013
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PROJECT_DIR: msvc14
      CMAKE_GENERATOR_NAME: Visual Studio 14 2015
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PROJECT_DIR: msvc15
      CMAKE_GENERATOR_NAME: Visual Studio 15 2017
    # Cygwin
    - BUILD_CYGWIN: yes
      USE_GNU_EXTENSION: 0
      CYGWIN_PATH: C:\cygwin
      CYGWIN_SETUP_EXE: setup-x86.exe
    - BUILD_CYGWIN: yes
      USE_GNU_EXTENSION: 1
      CYGWIN_PATH: C:\cygwin
      CYGWIN_SETUP_EXE: setup-x86.exe
    - BUILD_CYGWIN: yes
      USE_GNU_EXTENSION: 1
      CYGWIN_PATH: C:\cygwin64
      CYGWIN_SETUP_EXE: setup-x86_64.exe
    # MINGW64
    - BUILD_MINGW: yes
      MINGW_PATH: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
      #MINGW_PATH: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1
      MAKE_OPTIONS: LIBS=ws2_32
      #APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    # MINGW32 
    - BUILD_MINGW: yes
      #APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MINGW_PATH: c:\mingw\bin
    # Prefast
    - BUILD_PREFAST: yes
      PROJECT_DIR: msvc14
      MSBUILD_VER: 14.0
    # Menu
    - BUILD_MENU: yes
    # Package Build
    - BUILD_PACKAGE: yes
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    # Nuget
    - BUILD_NUGET: yes

configuration:
  - Debug
  - Release

matrix:
  exclude:
    - configuration: Debug
      BUILD_CYGWIN: yes
    - configuration: Debug
      BUILD_MINGW: yes
    - configuration: Release
      BUILD_PREFAST: yes
    - configuration: Debug
      BUILD_MENU: yes
    - configuration: Debug
      BUILD_PACKAGE: yes
    - configuration: Debug
      BUILD_NUGET: yes
      
clone_depth: 1

init:
  ps: |
    $commit_message = $env:APPVEYOR_REPO_COMMIT_MESSAGE
    if($commit_message.Contains("[appveyor rdp]")) {
        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
        Set-WinSystemLocale ja-JP
        Set-Location -Path hklm:\SYSTEM\CurrentControlSet\Control
        New-ItemProperty -Path ".\Keyboard Layout" -Name IgnoreRemoteKeyboardLayout -PropertyType DWORD -Value 1 -Force
        Restart-Computer
    }

before_build:
  cmd: |
      mkdir build && cd build
      cmake ../projects/cmake -G "%CMAKE_GENERATOR_NAME%" -Dbuild_gtest_samples=ON
      cd ..

build:
  project: build\iutest.sln
  parallel: true
  verbosity: minimal

test_script:
  cmd: |
      cd build
      ctest -C %Configuration% -V

for:
# Cygwin
-
  matrix:
    only:
      - configuration: Release
        BUILD_CYGWIN: yes
  install:
    cmd: |
      %CYGWIN_PATH%\%CYGWIN_SETUP_EXE% -qnNdO -R %CYGWIN_PATH% -s http://cygwin.mirror.constant.com -l %CYGWIN_PATH%/var/cache/setup -P make -P clang
      SET PATH=%CYGWIN_PATH%\bin;%PATH%
  before_build:
    cmd: echo.
  build_script:
    cmd: |
      cd test
      g++ --version; clang++ --version; python --version
      @echo. > foo.h && g++ -std=c++1z -dM -E -x c++ foo.h
      uname
      make
  test_script:
    cmd: |
      make test
# MINGW
-
  matrix:
    only:
      - configuration: Release
        BUILD_MINGW: yes
  install:
    cmd: set path=%MINGW_PATH%;%path%
  before_build:
    cmd: echo.
  build_script:
    cmd: |
      cd test
      g++ --version
      @echo. > foo.h && g++ -std=c++1z -dM -E -x c++ foo.h
      mingw32-make USE_GNU_EXTENSION=1 %MAKE_OPTIONS%
      mingw32-make clean
      mingw32-make %MAKE_OPTIONS%
  test_script:
    cmd: mingw32-make test %MAKE_OPTIONS%
# Prefast
-
  matrix:
    only:
      - configuration: Debug
        BUILD_PREFAST: yes
  before_build:
    cmd: echo.
  build_script:
    cmd: |
      '"%ProgramFiles(x86)%\MSBuild\%MSBUILD_VER%\Bin\MSBuild.exe" \
        "projects\%PROJECT_DIR%\iutest_sample.vcxproj" \
        /m /verbosity:minimal \
        /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" \
        /p:RunCodeAnalysis=true /p:EnablePREfast=true /p:CodeAnalysisTreatWarningsAsErrors=true'
  test: off
# Menu
-
  matrix:
    only:
      - configuration: Release
        BUILD_MENU: yes
  before_build:
    cmd: echo.
  build:
    project: samples\windows\iutest_windows_sample.sln
    parallel: true
    verbosity: minimal
  test: off
# Package Build
-
  matrix:
    only:
      - configuration: Release
        BUILD_PACKAGE: yes
  before_build:
    cmd: echo.
  build_script:
    sh: bash ./.ci/make-package.sh
  test: off
# NuGet
-
  matrix:
    only:
      - configuration: Release
        BUILD_NUGET: yes
  before_build:
    cmd: echo.
  build_script:
    ps: |
      $nuspecPath = "projects\nuget\iutest.nuspec"
      Write-Output "Building NuGet package"
      nuget pack $nuspecPath -OutputDirectory ".\"
  test: off
on_failure:
  ps: |
    # rdp
    $commit_message = $env:APPVEYOR_REPO_COMMIT_MESSAGE
    if($commit_message.Contains("[appveyor rdp]")) {
      $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    }

notifications:
  - provider: Email
    to:
      - zumix.cpp@gmail.com
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
