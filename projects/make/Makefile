# ƒTƒ“ƒvƒ‹ Makefile
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# iutest root directory
IUTEST_DIR = ../..

# sample code
SAMPLE_DIR = ../../samples
SAMPLE_SRCS = main.cpp \
              assertion.cpp \
              disabledtest.cpp \
              exception.cpp \
              fixture.cpp \
              parameterized.cpp \
              printto.cpp \
              simple.cpp \
              typed.cpp
              
SAMPLE_OBJS = $(SAMPLE_SRCS:%.cpp=%.o)

# Flags passed to the preprocessor.
CPPFLAGS += -I$(IUTEST_DIR)/include

# LD flags
LIBS_ = $(LIBS:%=-l%)
LDFLAGS += $(LIBS_)

# Optimize
#OPTIMIZE += -O2

#
# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -Wundef $(OPTIMIZE)
#CXXFLAGS += -DSHOW_FAILURE

ifeq ($(findstring clang, $(CXX)),clang)

#
# clang version
#
#

#CXXFLAGS += -std=c++0x
#CXXFLAGS += -std=c++11

else

#
# GCC version
#
#
GCCVERSION:=$(shell $(CXX) -dumpversion)

dot:=.
empty:=
space:=$(empty) $(empty)
GCCVERSION:=$(subst $(dot),$(space), $(GCCVERSION))
GCCMAJOR:=$(word 1, $(GCCVERSION))
GCCMINOR:=$(word 2, $(GCCVERSION))

ifeq (1,$(shell expr \( $(GCCMAJOR) \> 4 \) \| \( $(GCCMAJOR) \>= 4 \& $(GCCMINOR) \>= 7 \)))
# 4.7 later
CXXFLAGS += -std=c++11
else
#ifeq (1,$(shell expr \( $(GCCMAJOR) \> 4 \) \| \( $(GCCMAJOR) \>= 4 \& $(GCCMINOR) \>= 4 \)))
# 4.4 later
#CXXFLAGS += -std=c++0x
#endif
endif

endif

CXXFLAGS += $(DEFS)


# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = sample

# lib
LIBRARY_INSTALL_PATH=$(IUTEST_DIR)/lib
LIBRARYS_ = iutest.a iutest_main.a
LIBRARYS  = $(LIBRARYS_:%=$(LIBRARY_INSTALL_PATH)/lib%)

# All iutest headers.  Usually you shouldn't change this
# definition.
IUTEST_HEADERS = $(IUTEST_DIR)/include/*.hpp \
                 $(IUTEST_DIR)/include/impl/*.ipp \
                 $(IUTEST_DIR)/include/internal/*.hpp \
                 $(IUTEST_DIR)/include/listener/*.hpp \
                 $(IUTEST_DIR)/include/util/*.hpp \
                 $(IUTEST_DIR)/include/gtest/*.hpp
                 
IUTEST_SRCS    = $(IUTEST_DIR)/src/*.cpp \
                 $(IUTEST_HEADERS)

# House-keeping build targets.

.PHONY: clean default all run

all : $(LIBRARYS) $(TESTS)

clean :
	rm -f $(TESTS) $(LIBRARYS) *.o
	
run : $(TESTS)
	./$(TESTS) $(RUN_OPTION)

# Builds a library
.o.a : $(IUTEST_SRCS)
	$(AR) $(ARFLAGS) $(LIBRARY_INSTALL_PATH)/lib$@ $^

iutest.a : iutest_all.o
	$(AR) $(ARFLAGS) $(LIBRARY_INSTALL_PATH)/lib$@ $^

iutest_all.o : $(IUTEST_DIR)/src/iutest_all.cpp $(IUTEST_SRCS)
	$(CXX) $(CPPFLAGS) -I$(IUTEST_DIR) $(CXXFLAGS) -c $(IUTEST_DIR)/src/iutest_all.cpp

iutest_main.o : $(IUTEST_DIR)/src/iutest_main.cpp $(IUTEST_SRCS)
	$(CXX) $(CPPFLAGS) -I$(IUTEST_DIR) $(CXXFLAGS) -c $(IUTEST_DIR)/src/iutest_main.cpp

$(LIBRARY_INSTALL_PATH):
	@if [ ! -d $(IUTEST_DIR)/libs ]; then \
		mkdir -p $@; \
	fi

$(LIBRARYS) : $(LIBRARY_INSTALL_PATH) $(LIBRARYS_)

# Builds a sample test.  

%.o : $(SAMPLE_DIR)/%.cpp $(IUTEST_HEADERS) Makefile
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $<

$(TESTS) : $(SAMPLE_OBJS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $^ -o $@ $(LDFLAGS)
